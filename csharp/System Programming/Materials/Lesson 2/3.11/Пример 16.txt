using System;
using System.Threading;

class Program
{
    private static readonly object monitorObject = new object();
    private static int counter = 0;

    static void Main()
    {
        Thread t1 = new Thread(IncrementCounter);
        Thread t2 = new Thread(IncrementCounter);

        t1.Start();
        t2.Start();

        t1.Join();
        t2.Join();

        Console.WriteLine($"Final counter value: {counter}");
    }

    static void IncrementCounter()
    {
        for (int i = 0; i < 1000; i++)
        {
            Monitor.Enter(monitorObject);
            try
            {
                counter++;
            }
            finally
            {
                Monitor.Exit(monitorObject);
            }
        }
    }
}

Описание: В этом примере используется Monitor.Enter и Monitor.Exit для блокировки объекта. С помощью try/finally гарантируется, что блокировка будет снята даже в случае возникновения исключения, что не всегда происходит при использовании lock.